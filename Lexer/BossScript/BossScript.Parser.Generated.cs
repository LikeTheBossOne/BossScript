// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, John Gough, QUT 2005-2014
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.5.2
// DateTime: 1/29/2023 7:29:34 PM
// Input file <BossScript\BossScript.Language.grammar.y - 1/29/2023 7:16:29 PM>

// options: no-lines gplex

using System;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using System.Globalization;
using System.Text;
using QUT.Gppg;

namespace BossScript.BossScript
{
internal enum Token {
    error=127,EOF=128,BREAK=129,DOUBLE=130,ELSE=131,FOR=132,
    IF=133,INT=134,RETURN=135,VOID=136,WHILE=137,IDENTIFIER=138,
    CLASSNAME=139,CLASS=140,STRING=141,BOOL=142,INT_LIT=143,DOUBLE_LIT=144,
    STRING_LIT=145,BOOL_LIT=146,NULL_VAL=147,LESS_THAN_OR_EQUAL=148,GREATER_THAN_OR_EQUAL=149,IS_EQUAL_TO=150,
    NOT_EQUAL_TO=151,LOGICAL_AND=152,LOGICAL_OR=153,INCREMENT=154,DECREMENT=155,PUBLIC=156,
    STATIC=157};

// Abstract base class for GPLEX scanners
[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.5.2")]
internal abstract class ScanBase : AbstractScanner<int,LexLocation> {
  private LexLocation __yylloc = new LexLocation();
  public override LexLocation yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }
}

// Utility class for encapsulating token information
[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.5.2")]
internal class ScanObj {
  public int token;
  public int yylval;
  public LexLocation yylloc;
  public ScanObj( int t, int val, LexLocation loc ) {
    this.token = t; this.yylval = val; this.yylloc = loc;
  }
}

[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.5.2")]
internal partial class BossScriptParser: ShiftReduceParser<int, LexLocation>
{
#pragma warning disable 649
  private static Dictionary<int, string> aliases;
#pragma warning restore 649
  private static Rule[] rules = new Rule[129];
  private static State[] states = new State[209];
  private static string[] nonTerms = new string[] {
      "ClassDecl", "$accept", "ClassBody", "ClassBodyDecls", "ClassBodyDecl", 
      "FieldDecl", "MethodDecl", "ConstructorDecl", "Type", "VarDecls", "Name", 
      "QualifiedName", "VarDeclarator", "MethodHeader", "Block", "FuncDeclarator", 
      "FormalParmListOpt", "FormalParmList", "FormalParm", "BlockStmtsOpt", "BlockStmts", 
      "BlockStmt", "LocalVarDeclStmt", "Stmt", "LocalVarDecl", "ExprStmt", "BreakStmt", 
      "ReturnStmt", "IfThenStmt", "IfThenElseStmt", "IfThenElseIfStmt", "WhileStmt", 
      "ForStmt", "StmtExpr", "Assignment", "MethodCall", "InstantiationExpr", 
      "Expr", "ElseIfSequence", "ElseIfStmt", "ForInit", "ExprOpt", "ForUpdate", 
      "StmtExprList", "Primary", "Literal", "FieldAccess", "ArgListOpt", "ArgList", 
      "PostFixExpr", "UnaryExpr", "MulExpr", "AddExpr", "RelOp", "RelExpr", "EqExpr", 
      "CondAndExpr", "CondOrExpr", "LeftHandSide", "AssignOp", };

  static BossScriptParser() {
    states[0] = new State(new int[]{156,3},new int[]{-1,1});
    states[1] = new State(new int[]{128,2});
    states[2] = new State(-1);
    states[3] = new State(new int[]{140,4});
    states[4] = new State(new int[]{138,5});
    states[5] = new State(new int[]{123,7},new int[]{-3,6});
    states[6] = new State(-2);
    states[7] = new State(new int[]{125,207,134,21,130,22,142,23,141,24,136,25,138,43,156,200},new int[]{-4,8,-5,208,-6,11,-9,12,-11,37,-12,41,-7,44,-14,45,-8,204,-16,205});
    states[8] = new State(new int[]{125,9,134,21,130,22,142,23,141,24,136,25,138,43,156,200},new int[]{-5,10,-6,11,-9,12,-11,37,-12,41,-7,44,-14,45,-8,204,-16,205});
    states[9] = new State(-3);
    states[10] = new State(-6);
    states[11] = new State(-7);
    states[12] = new State(new int[]{138,19},new int[]{-10,13,-13,20});
    states[13] = new State(new int[]{59,14,44,15});
    states[14] = new State(-10);
    states[15] = new State(new int[]{138,19},new int[]{-13,16});
    states[16] = new State(new int[]{91,17,59,-21,44,-21});
    states[17] = new State(new int[]{93,18});
    states[18] = new State(-23);
    states[19] = new State(-22);
    states[20] = new State(new int[]{91,17,59,-20,44,-20});
    states[21] = new State(-11);
    states[22] = new State(-12);
    states[23] = new State(-13);
    states[24] = new State(-14);
    states[25] = new State(new int[]{138,27},new int[]{-16,26});
    states[26] = new State(-27);
    states[27] = new State(new int[]{40,28});
    states[28] = new State(new int[]{134,21,130,22,142,23,141,24,136,36,138,40,41,-30},new int[]{-17,29,-18,31,-19,42,-9,34,-11,37,-12,41});
    states[29] = new State(new int[]{41,30});
    states[30] = new State(-28);
    states[31] = new State(new int[]{44,32,41,-29});
    states[32] = new State(new int[]{134,21,130,22,142,23,141,24,136,36,138,40},new int[]{-19,33,-9,34,-11,37,-12,41});
    states[33] = new State(-32);
    states[34] = new State(new int[]{138,19},new int[]{-13,35});
    states[35] = new State(new int[]{91,17,44,-33,41,-33});
    states[36] = new State(-15);
    states[37] = new State(new int[]{46,38,138,-16});
    states[38] = new State(new int[]{138,39});
    states[39] = new State(-19);
    states[40] = new State(-17);
    states[41] = new State(-18);
    states[42] = new State(-31);
    states[43] = new State(new int[]{40,28,46,-17,138,-17});
    states[44] = new State(-8);
    states[45] = new State(new int[]{123,47},new int[]{-15,46});
    states[46] = new State(-24);
    states[47] = new State(new int[]{134,21,130,22,142,23,141,24,136,36,138,40,123,47,59,140,143,104,144,105,146,106,145,107,147,108,40,109,129,149,135,152,133,157,137,178,132,184,125,-36},new int[]{-20,48,-21,50,-22,52,-23,53,-25,54,-9,56,-11,58,-12,41,-24,138,-15,139,-26,141,-34,142,-35,144,-59,129,-47,123,-45,145,-46,103,-36,146,-37,147,-27,148,-28,151,-29,156,-30,175,-31,176,-32,177,-33,183});
    states[48] = new State(new int[]{125,49});
    states[49] = new State(-34);
    states[50] = new State(new int[]{134,21,130,22,142,23,141,24,136,36,138,40,123,47,59,140,143,104,144,105,146,106,145,107,147,108,40,109,129,149,135,152,133,157,137,178,132,184,125,-35},new int[]{-21,51,-22,52,-23,53,-25,54,-9,56,-11,58,-12,41,-24,138,-15,139,-26,141,-34,142,-35,144,-59,129,-47,123,-45,145,-46,103,-36,146,-37,147,-27,148,-28,151,-29,156,-30,175,-31,176,-32,177,-33,183});
    states[51] = new State(new int[]{134,21,130,22,142,23,141,24,136,36,138,40,123,47,59,140,143,104,144,105,146,106,145,107,147,108,40,109,129,149,135,152,133,157,137,178,132,184,125,-38},new int[]{-21,51,-22,52,-23,53,-25,54,-9,56,-11,58,-12,41,-24,138,-15,139,-26,141,-34,142,-35,144,-59,129,-47,123,-45,145,-46,103,-36,146,-37,147,-27,148,-28,151,-29,156,-30,175,-31,176,-32,177,-33,183});
    states[52] = new State(-37);
    states[53] = new State(-39);
    states[54] = new State(new int[]{59,55});
    states[55] = new State(-41);
    states[56] = new State(new int[]{138,19},new int[]{-10,57,-13,20});
    states[57] = new State(new int[]{44,15,59,-42});
    states[58] = new State(new int[]{46,38,40,59,123,125,138,-16,61,-124,154,-124,155,-124});
    states[59] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40,41,-90},new int[]{-48,60,-49,62,-38,89,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[60] = new State(new int[]{41,61});
    states[61] = new State(new int[]{59,-86,46,-92,44,-86,41,-86});
    states[62] = new State(new int[]{44,63,41,-89,125,-89});
    states[63] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-38,64,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[64] = new State(-88);
    states[65] = new State(new int[]{153,66,44,-121,41,-121,125,-121,59,-121});
    states[66] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-57,67,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[67] = new State(new int[]{152,68,153,-120,44,-120,41,-120,125,-120,59,-120});
    states[68] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-56,69,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[69] = new State(new int[]{150,70,151,92,152,-118,153,-118,44,-118,41,-118,125,-118,59,-118});
    states[70] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-55,71,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[71] = new State(new int[]{148,94,149,95,60,96,62,97,150,-115,151,-115,152,-115,153,-115,44,-115,41,-115,125,-115,59,-115},new int[]{-54,72});
    states[72] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-53,73,-52,113,-51,122,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[73] = new State(new int[]{43,74,45,99,148,-113,149,-113,60,-113,62,-113,150,-113,151,-113,152,-113,153,-113,44,-113,41,-113,125,-113,59,-113});
    states[74] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-52,75,-51,122,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[75] = new State(new int[]{42,76,47,101,37,114,43,-106,45,-106,148,-106,149,-106,60,-106,62,-106,150,-106,151,-106,152,-106,153,-106,44,-106,41,-106,125,-106,59,-106});
    states[76] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-51,77,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[77] = new State(-102);
    states[78] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-51,79,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[79] = new State(-98);
    states[80] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-51,81,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[81] = new State(-99);
    states[82] = new State(-100);
    states[83] = new State(new int[]{46,84,42,-96,47,-96,37,-96,43,-96,45,-96,148,-96,149,-96,60,-96,62,-96,150,-96,151,-96,152,-96,153,-96,44,-96,41,-96,125,-96,59,-96});
    states[84] = new State(new int[]{138,85});
    states[85] = new State(new int[]{40,86,123,135,61,-91,154,-91,155,-91,46,-91,42,-91,47,-91,37,-91,43,-91,45,-91,148,-91,149,-91,60,-91,62,-91,150,-91,151,-91,152,-91,153,-91,44,-91,41,-91,125,-91,59,-91});
    states[86] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40,41,-90},new int[]{-48,87,-49,62,-38,89,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[87] = new State(new int[]{41,88});
    states[88] = new State(-94);
    states[89] = new State(-87);
    states[90] = new State(new int[]{152,68,153,-119,44,-119,41,-119,125,-119,59,-119});
    states[91] = new State(new int[]{150,70,151,92,152,-117,153,-117,44,-117,41,-117,125,-117,59,-117});
    states[92] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-55,93,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[93] = new State(new int[]{148,94,149,95,60,96,62,97,150,-116,151,-116,152,-116,153,-116,44,-116,41,-116,125,-116,59,-116},new int[]{-54,72});
    states[94] = new State(-108);
    states[95] = new State(-109);
    states[96] = new State(-110);
    states[97] = new State(-111);
    states[98] = new State(new int[]{43,74,45,99,148,-112,149,-112,60,-112,62,-112,150,-112,151,-112,152,-112,153,-112,44,-112,41,-112,125,-112,59,-112});
    states[99] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-52,100,-51,122,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[100] = new State(new int[]{42,76,47,101,37,114,43,-107,45,-107,148,-107,149,-107,60,-107,62,-107,150,-107,151,-107,152,-107,153,-107,44,-107,41,-107,125,-107,59,-107});
    states[101] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-51,102,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[102] = new State(-103);
    states[103] = new State(-77);
    states[104] = new State(-81);
    states[105] = new State(-82);
    states[106] = new State(-83);
    states[107] = new State(-84);
    states[108] = new State(-85);
    states[109] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-38,110,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[110] = new State(new int[]{41,111});
    states[111] = new State(-78);
    states[112] = new State(new int[]{148,94,149,95,60,96,62,97,150,-114,151,-114,152,-114,153,-114,44,-114,41,-114,125,-114,59,-114},new int[]{-54,72});
    states[113] = new State(new int[]{42,76,47,101,37,114,43,-105,45,-105,148,-105,149,-105,60,-105,62,-105,150,-105,151,-105,152,-105,153,-105,44,-105,41,-105,125,-105,59,-105});
    states[114] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-51,115,-50,82,-45,83,-46,103,-47,116,-36,117,-11,118,-12,41});
    states[115] = new State(-104);
    states[116] = new State(-79);
    states[117] = new State(-80);
    states[118] = new State(new int[]{40,119,46,38,123,125,42,-97,47,-97,37,-97,43,-97,45,-97,148,-97,149,-97,60,-97,62,-97,150,-97,151,-97,152,-97,153,-97,44,-97,41,-97,125,-97,59,-97});
    states[119] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40,41,-90},new int[]{-48,120,-49,62,-38,89,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[120] = new State(new int[]{41,121});
    states[121] = new State(-92);
    states[122] = new State(-101);
    states[123] = new State(new int[]{46,-79,42,-79,47,-79,37,-79,43,-79,45,-79,148,-79,149,-79,60,-79,62,-79,150,-79,151,-79,152,-79,153,-79,44,-79,41,-79,125,-79,59,-79,61,-125,154,-125,155,-125});
    states[124] = new State(new int[]{40,119,46,38,123,125,42,-97,47,-97,37,-97,43,-97,45,-97,148,-97,149,-97,60,-97,62,-97,150,-97,151,-97,152,-97,153,-97,44,-97,41,-97,125,-97,59,-97,61,-124,154,-124,155,-124});
    states[125] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40,125,-90},new int[]{-48,126,-49,62,-38,89,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[126] = new State(new int[]{125,127});
    states[127] = new State(-93);
    states[128] = new State(-122);
    states[129] = new State(new int[]{61,132,154,133,155,134},new int[]{-60,130});
    states[130] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-38,131,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[131] = new State(-123);
    states[132] = new State(-126);
    states[133] = new State(-127);
    states[134] = new State(-128);
    states[135] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40,125,-90},new int[]{-48,136,-49,62,-38,89,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[136] = new State(new int[]{125,137});
    states[137] = new State(-95);
    states[138] = new State(-40);
    states[139] = new State(-43);
    states[140] = new State(-44);
    states[141] = new State(-45);
    states[142] = new State(new int[]{59,143});
    states[143] = new State(-53);
    states[144] = new State(-54);
    states[145] = new State(new int[]{46,84});
    states[146] = new State(new int[]{46,-80,59,-55,44,-55,41,-55});
    states[147] = new State(-56);
    states[148] = new State(-46);
    states[149] = new State(new int[]{59,150});
    states[150] = new State(-75);
    states[151] = new State(-47);
    states[152] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40,59,-70},new int[]{-42,153,-38,155,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[153] = new State(new int[]{59,154});
    states[154] = new State(-76);
    states[155] = new State(-69);
    states[156] = new State(-48);
    states[157] = new State(new int[]{40,158});
    states[158] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-38,159,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[159] = new State(new int[]{41,160});
    states[160] = new State(new int[]{123,47},new int[]{-15,161});
    states[161] = new State(new int[]{131,162,134,-57,130,-57,142,-57,141,-57,136,-57,138,-57,123,-57,59,-57,143,-57,144,-57,146,-57,145,-57,147,-57,40,-57,129,-57,135,-57,133,-57,137,-57,132,-57,125,-57},new int[]{-39,170,-40,174});
    states[162] = new State(new int[]{123,47,133,165},new int[]{-15,163,-29,164});
    states[163] = new State(-58);
    states[164] = new State(-63);
    states[165] = new State(new int[]{40,166});
    states[166] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-38,167,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[167] = new State(new int[]{41,168});
    states[168] = new State(new int[]{123,47},new int[]{-15,169});
    states[169] = new State(-57);
    states[170] = new State(new int[]{131,171,134,-59,130,-59,142,-59,141,-59,136,-59,138,-59,123,-59,59,-59,143,-59,144,-59,146,-59,145,-59,147,-59,40,-59,129,-59,135,-59,133,-59,137,-59,132,-59,125,-59},new int[]{-40,173});
    states[171] = new State(new int[]{123,47,133,165},new int[]{-15,172,-29,164});
    states[172] = new State(-60);
    states[173] = new State(-62);
    states[174] = new State(-61);
    states[175] = new State(-49);
    states[176] = new State(-50);
    states[177] = new State(-51);
    states[178] = new State(new int[]{40,179});
    states[179] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40},new int[]{-38,180,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[180] = new State(new int[]{41,181});
    states[181] = new State(new int[]{123,47},new int[]{-15,182});
    states[182] = new State(-64);
    states[183] = new State(-52);
    states[184] = new State(new int[]{40,185});
    states[185] = new State(new int[]{138,40,143,104,144,105,146,106,145,107,147,108,40,109,134,21,130,22,142,23,141,24,136,36,59,-68},new int[]{-41,186,-44,198,-34,197,-35,144,-59,129,-11,58,-12,41,-47,123,-45,145,-46,103,-36,146,-37,147,-25,199,-9,56});
    states[186] = new State(new int[]{59,187});
    states[187] = new State(new int[]{45,78,33,80,143,104,144,105,146,106,145,107,147,108,40,109,138,40,59,-70},new int[]{-42,188,-38,155,-58,65,-57,90,-56,91,-55,112,-53,98,-52,113,-51,122,-50,82,-45,83,-46,103,-47,123,-36,117,-11,124,-12,41,-35,128,-59,129});
    states[188] = new State(new int[]{59,189});
    states[189] = new State(new int[]{138,40,143,104,144,105,146,106,145,107,147,108,40,109,41,-72},new int[]{-43,190,-44,193,-34,197,-35,144,-59,129,-11,196,-12,41,-47,123,-45,145,-46,103,-36,146,-37,147});
    states[190] = new State(new int[]{41,191});
    states[191] = new State(new int[]{123,47},new int[]{-15,192});
    states[192] = new State(-65);
    states[193] = new State(new int[]{44,194,41,-71});
    states[194] = new State(new int[]{138,40,143,104,144,105,146,106,145,107,147,108,40,109},new int[]{-34,195,-35,144,-59,129,-11,196,-12,41,-47,123,-45,145,-46,103,-36,146,-37,147});
    states[195] = new State(-74);
    states[196] = new State(new int[]{46,38,40,59,123,125,61,-124,154,-124,155,-124});
    states[197] = new State(-73);
    states[198] = new State(new int[]{44,194,59,-66});
    states[199] = new State(-67);
    states[200] = new State(new int[]{157,201});
    states[201] = new State(new int[]{134,21,130,22,142,23,141,24,136,36,138,40},new int[]{-9,202,-11,37,-12,41});
    states[202] = new State(new int[]{138,27},new int[]{-16,203});
    states[203] = new State(-26);
    states[204] = new State(-9);
    states[205] = new State(new int[]{123,47},new int[]{-15,206});
    states[206] = new State(-25);
    states[207] = new State(-4);
    states[208] = new State(-5);

    for (int sNo = 0; sNo < states.Length; sNo++) states[sNo].number = sNo;

    rules[1] = new Rule(-2, new int[]{-1,128});
    rules[2] = new Rule(-1, new int[]{156,140,138,-3});
    rules[3] = new Rule(-3, new int[]{123,-4,125});
    rules[4] = new Rule(-3, new int[]{123,125});
    rules[5] = new Rule(-4, new int[]{-5});
    rules[6] = new Rule(-4, new int[]{-4,-5});
    rules[7] = new Rule(-5, new int[]{-6});
    rules[8] = new Rule(-5, new int[]{-7});
    rules[9] = new Rule(-5, new int[]{-8});
    rules[10] = new Rule(-6, new int[]{-9,-10,59});
    rules[11] = new Rule(-9, new int[]{134});
    rules[12] = new Rule(-9, new int[]{130});
    rules[13] = new Rule(-9, new int[]{142});
    rules[14] = new Rule(-9, new int[]{141});
    rules[15] = new Rule(-9, new int[]{136});
    rules[16] = new Rule(-9, new int[]{-11});
    rules[17] = new Rule(-11, new int[]{138});
    rules[18] = new Rule(-11, new int[]{-12});
    rules[19] = new Rule(-12, new int[]{-11,46,138});
    rules[20] = new Rule(-10, new int[]{-13});
    rules[21] = new Rule(-10, new int[]{-10,44,-13});
    rules[22] = new Rule(-13, new int[]{138});
    rules[23] = new Rule(-13, new int[]{-13,91,93});
    rules[24] = new Rule(-7, new int[]{-14,-15});
    rules[25] = new Rule(-8, new int[]{-16,-15});
    rules[26] = new Rule(-14, new int[]{156,157,-9,-16});
    rules[27] = new Rule(-14, new int[]{136,-16});
    rules[28] = new Rule(-16, new int[]{138,40,-17,41});
    rules[29] = new Rule(-17, new int[]{-18});
    rules[30] = new Rule(-17, new int[]{});
    rules[31] = new Rule(-18, new int[]{-19});
    rules[32] = new Rule(-18, new int[]{-18,44,-19});
    rules[33] = new Rule(-19, new int[]{-9,-13});
    rules[34] = new Rule(-15, new int[]{123,-20,125});
    rules[35] = new Rule(-20, new int[]{-21});
    rules[36] = new Rule(-20, new int[]{});
    rules[37] = new Rule(-21, new int[]{-22});
    rules[38] = new Rule(-21, new int[]{-21,-21});
    rules[39] = new Rule(-22, new int[]{-23});
    rules[40] = new Rule(-22, new int[]{-24});
    rules[41] = new Rule(-23, new int[]{-25,59});
    rules[42] = new Rule(-25, new int[]{-9,-10});
    rules[43] = new Rule(-24, new int[]{-15});
    rules[44] = new Rule(-24, new int[]{59});
    rules[45] = new Rule(-24, new int[]{-26});
    rules[46] = new Rule(-24, new int[]{-27});
    rules[47] = new Rule(-24, new int[]{-28});
    rules[48] = new Rule(-24, new int[]{-29});
    rules[49] = new Rule(-24, new int[]{-30});
    rules[50] = new Rule(-24, new int[]{-31});
    rules[51] = new Rule(-24, new int[]{-32});
    rules[52] = new Rule(-24, new int[]{-33});
    rules[53] = new Rule(-26, new int[]{-34,59});
    rules[54] = new Rule(-34, new int[]{-35});
    rules[55] = new Rule(-34, new int[]{-36});
    rules[56] = new Rule(-34, new int[]{-37});
    rules[57] = new Rule(-29, new int[]{133,40,-38,41,-15});
    rules[58] = new Rule(-30, new int[]{133,40,-38,41,-15,131,-15});
    rules[59] = new Rule(-31, new int[]{133,40,-38,41,-15,-39});
    rules[60] = new Rule(-31, new int[]{133,40,-38,41,-15,-39,131,-15});
    rules[61] = new Rule(-39, new int[]{-40});
    rules[62] = new Rule(-39, new int[]{-39,-40});
    rules[63] = new Rule(-40, new int[]{131,-29});
    rules[64] = new Rule(-32, new int[]{137,40,-38,41,-15});
    rules[65] = new Rule(-33, new int[]{132,40,-41,59,-42,59,-43,41,-15});
    rules[66] = new Rule(-41, new int[]{-44});
    rules[67] = new Rule(-41, new int[]{-25});
    rules[68] = new Rule(-41, new int[]{});
    rules[69] = new Rule(-42, new int[]{-38});
    rules[70] = new Rule(-42, new int[]{});
    rules[71] = new Rule(-43, new int[]{-44});
    rules[72] = new Rule(-43, new int[]{});
    rules[73] = new Rule(-44, new int[]{-34});
    rules[74] = new Rule(-44, new int[]{-44,44,-34});
    rules[75] = new Rule(-27, new int[]{129,59});
    rules[76] = new Rule(-28, new int[]{135,-42,59});
    rules[77] = new Rule(-45, new int[]{-46});
    rules[78] = new Rule(-45, new int[]{40,-38,41});
    rules[79] = new Rule(-45, new int[]{-47});
    rules[80] = new Rule(-45, new int[]{-36});
    rules[81] = new Rule(-46, new int[]{143});
    rules[82] = new Rule(-46, new int[]{144});
    rules[83] = new Rule(-46, new int[]{146});
    rules[84] = new Rule(-46, new int[]{145});
    rules[85] = new Rule(-46, new int[]{147});
    rules[86] = new Rule(-37, new int[]{-11,40,-48,41});
    rules[87] = new Rule(-49, new int[]{-38});
    rules[88] = new Rule(-49, new int[]{-49,44,-38});
    rules[89] = new Rule(-48, new int[]{-49});
    rules[90] = new Rule(-48, new int[]{});
    rules[91] = new Rule(-47, new int[]{-45,46,138});
    rules[92] = new Rule(-36, new int[]{-11,40,-48,41});
    rules[93] = new Rule(-36, new int[]{-11,123,-48,125});
    rules[94] = new Rule(-36, new int[]{-45,46,138,40,-48,41});
    rules[95] = new Rule(-36, new int[]{-45,46,138,123,-48,125});
    rules[96] = new Rule(-50, new int[]{-45});
    rules[97] = new Rule(-50, new int[]{-11});
    rules[98] = new Rule(-51, new int[]{45,-51});
    rules[99] = new Rule(-51, new int[]{33,-51});
    rules[100] = new Rule(-51, new int[]{-50});
    rules[101] = new Rule(-52, new int[]{-51});
    rules[102] = new Rule(-52, new int[]{-52,42,-51});
    rules[103] = new Rule(-52, new int[]{-52,47,-51});
    rules[104] = new Rule(-52, new int[]{-52,37,-51});
    rules[105] = new Rule(-53, new int[]{-52});
    rules[106] = new Rule(-53, new int[]{-53,43,-52});
    rules[107] = new Rule(-53, new int[]{-53,45,-52});
    rules[108] = new Rule(-54, new int[]{148});
    rules[109] = new Rule(-54, new int[]{149});
    rules[110] = new Rule(-54, new int[]{60});
    rules[111] = new Rule(-54, new int[]{62});
    rules[112] = new Rule(-55, new int[]{-53});
    rules[113] = new Rule(-55, new int[]{-55,-54,-53});
    rules[114] = new Rule(-56, new int[]{-55});
    rules[115] = new Rule(-56, new int[]{-56,150,-55});
    rules[116] = new Rule(-56, new int[]{-56,151,-55});
    rules[117] = new Rule(-57, new int[]{-56});
    rules[118] = new Rule(-57, new int[]{-57,152,-56});
    rules[119] = new Rule(-58, new int[]{-57});
    rules[120] = new Rule(-58, new int[]{-58,153,-57});
    rules[121] = new Rule(-38, new int[]{-58});
    rules[122] = new Rule(-38, new int[]{-35});
    rules[123] = new Rule(-35, new int[]{-59,-60,-38});
    rules[124] = new Rule(-59, new int[]{-11});
    rules[125] = new Rule(-59, new int[]{-47});
    rules[126] = new Rule(-60, new int[]{61});
    rules[127] = new Rule(-60, new int[]{154});
    rules[128] = new Rule(-60, new int[]{155});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Token.error, (int)Token.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
#pragma warning disable 162, 1522
    switch (action)
    {
    }
#pragma warning restore 162, 1522
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliases != null && aliases.ContainsKey(terminal))
        return aliases[terminal];
    else if (((Token)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Token)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

}
}
